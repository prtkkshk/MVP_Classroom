module.exports = {
  root: true,
  env: {
    browser: true,
    es2022: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    '@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:prettier/recommended',
    'plugin:sonarjs/recommended',
    'plugin:security/recommended',
    'plugin:react/jsx-runtime',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
    project: './tsconfig.json',
  },
  plugins: [
    '@typescript-eslint',
    'react',
    'react-hooks',
    'jsx-a11y',
    'import',
    'prettier',
    'sonarjs',
    'security',
    'react-refresh',
  ],
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true,
        project: './tsconfig.json',
      },
    },
  },
  rules: {
    // TypeScript specific rules
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/prefer-const': 'error',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/no-non-null-assertion': 'warn',
    '@typescript-eslint/consistent-type-imports': 'error',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/no-misused-promises': 'error',

    // React specific rules
    'react/prop-types': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/display-name': 'off',
    'react/no-unescaped-entities': 'off',
    'react/jsx-key': 'error',
    'react/jsx-no-duplicate-props': 'error',
    'react/jsx-no-undef': 'error',
    'react/jsx-uses-react': 'off',
    'react/jsx-uses-vars': 'error',
    'react/no-array-index-key': 'warn',
    'react/no-danger': 'error',
    'react/no-deprecated': 'error',
    'react/no-direct-mutation-state': 'error',
    'react/no-find-dom-node': 'error',
    'react/no-is-mounted': 'error',
    'react/no-render-return-value': 'error',
    'react/no-string-refs': 'error',
    'react/no-unknown-property': 'error',
    'react/self-closing-comp': 'error',
    'react/sort-comp': 'off',
    'react/sort-prop-types': 'off',

    // React Hooks rules
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',

    // Accessibility rules
    'jsx-a11y/alt-text': 'error',
    'jsx-a11y/anchor-has-content': 'error',
    'jsx-a11y/anchor-is-valid': 'error',
    'jsx-a11y/aria-props': 'error',
    'jsx-a11y/aria-proptypes': 'error',
    'jsx-a11y/aria-unsupported-elements': 'error',
    'jsx-a11y/click-events-have-key-events': 'warn',
    'jsx-a11y/heading-has-content': 'error',
    'jsx-a11y/html-has-lang': 'error',
    'jsx-a11y/iframe-has-title': 'error',
    'jsx-a11y/img-redundant-alt': 'error',
    'jsx-a11y/no-access-key': 'error',
    'jsx-a11y/no-autofocus': 'error',
    'jsx-a11y/no-distracting-elements': 'error',
    'jsx-a11y/no-redundant-roles': 'error',
    'jsx-a11y/role-has-required-aria-props': 'error',
    'jsx-a11y/role-supports-aria-props': 'error',
    'jsx-a11y/scope': 'error',
    'jsx-a11y/tabindex-no-positive': 'error',

    // Import rules
    'import/order': [
      'error',
      {
        groups: [
          'builtin',
          'external',
          'internal',
          'parent',
          'sibling',
          'index',
        ],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
    'import/no-unresolved': 'error',
    'import/no-cycle': 'error',
    'import/no-self-import': 'error',
    'import/no-useless-path-segments': 'error',
    'import/no-duplicates': 'error',
    'import/no-unused-modules': 'warn',
    'import/no-extraneous-dependencies': 'error',

    // General code quality rules
    'no-console': 'warn',
    'no-debugger': 'error',
    'no-alert': 'error',
    'no-eval': 'error',
    'no-implied-eval': 'error',
    'no-new-func': 'error',
    'no-script-url': 'error',
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-template': 'error',
    'prefer-spread': 'error',
    'prefer-rest-params': 'error',
    'no-duplicate-imports': 'error',
    'no-useless-rename': 'error',
    'no-useless-constructor': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-return': 'error',
    'no-useless-catch': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-fallback-in-spread': 'error',
    'no-useless-optional-chaining': 'error',
    'no-useless-promise-resolve-reject': 'error',
    'no-useless-template-literals': 'error',
    'no-useless-undefined': 'error',
    'no-useless-void': 'error',
    'no-useless-array-callback': 'error',
    'no-useless-array-method': 'error',
    'no-useless-array-sort': 'error',
    'no-useless-array-constructor': 'error',
    'no-useless-array-destructuring': 'error',
    'no-useless-array-flat': 'error',
    'no-useless-array-flat-map': 'error',
    'no-useless-array-from': 'error',
    'no-useless-array-includes': 'error',
    'no-useless-array-index-of': 'error',
    'no-useless-array-join': 'error',
    'no-useless-array-last-index-of': 'error',
    'no-useless-array-map': 'error',
    'no-useless-array-pop': 'error',
    'no-useless-array-push': 'error',
    'no-useless-array-reduce': 'error',
    'no-useless-array-reduce-right': 'error',
    'no-useless-array-reverse': 'error',
    'no-useless-array-shift': 'error',
    'no-useless-array-slice': 'error',
    'no-useless-array-some': 'error',
    'no-useless-array-splice': 'error',
    'no-useless-array-to-string': 'error',
    'no-useless-array-unshift': 'error',
    'no-useless-array-values': 'error',
    'no-useless-array-entries': 'error',
    'no-useless-array-keys': 'error',
    'no-useless-array-symbol-iterator': 'error',
    'no-useless-array-symbol-async-iterator': 'error',
    'no-useless-array-symbol-match': 'error',
    'no-useless-array-symbol-replace': 'error',
    'no-useless-array-symbol-search': 'error',
    'no-useless-array-symbol-split': 'error',
    'no-useless-array-symbol-to-primitive': 'error',
    'no-useless-array-symbol-to-string-tag': 'error',
    'no-useless-array-symbol-unscopables': 'error',
    'no-useless-array-symbol-has-instance': 'error',
    'no-useless-array-symbol-is-concat-spreadable': 'error',
    'no-useless-array-symbol-iterator': 'error',
    'no-useless-array-symbol-async-iterator': 'error',
    'no-useless-array-symbol-match': 'error',
    'no-useless-array-symbol-replace': 'error',
    'no-useless-array-symbol-search': 'error',
    'no-useless-array-symbol-split': 'error',
    'no-useless-array-symbol-to-primitive': 'error',
    'no-useless-array-symbol-to-string-tag': 'error',
    'no-useless-array-symbol-unscopables': 'error',
    'no-useless-array-symbol-has-instance': 'error',
    'no-useless-array-symbol-is-concat-spreadable': 'error',

    // SonarJS rules for code quality
    'sonarjs/cognitive-complexity': ['error', 15],
    'sonarjs/no-duplicate-string': 'error',
    'sonarjs/no-redundant-boolean': 'error',
    'sonarjs/no-redundant-jump': 'error',
    'sonarjs/no-small-switch': 'error',
    'sonarjs/no-identical-functions': 'error',
    'sonarjs/no-identical-expressions': 'error',
    'sonarjs/no-one-iteration-loop': 'error',
    'sonarjs/no-use-of-empty-return-value': 'error',
    'sonarjs/prefer-immediate-return': 'error',
    'sonarjs/prefer-object-literal': 'error',
    'sonarjs/prefer-while': 'error',
    'sonarjs/no-array-constructor': 'error',
    'sonarjs/no-extra-arguments': 'error',
    'sonarjs/no-inverted-boolean-check': 'error',
    'sonarjs/no-nested-template-literals': 'error',
    'sonarjs/no-return-type-any': 'error',
    'sonarjs/no-unused-collection': 'error',
    'sonarjs/no-useless-catch': 'error',
    'sonarjs/no-useless-increment': 'error',
    'sonarjs/no-useless-return': 'error',
    'sonarjs/prefer-default-export': 'off',
    'sonarjs/prefer-single-boolean-return': 'error',
    'sonarjs/no-all-duplicated-branches': 'error',
    'sonarjs/no-element-overwrite': 'error',
    'sonarjs/no-identical-conditions': 'error',
    'sonarjs/no-multiline-string-literals': 'error',
    'sonarjs/no-nested-switch': 'error',
    'sonarjs/no-redundant-parentheses': 'error',
    'sonarjs/no-undefined-argument': 'error',
    'sonarjs/no-unsafe-finally': 'error',
    'sonarjs/prefer-const': 'error',

    // Security rules
    'security/detect-object-injection': 'warn',
    'security/detect-non-literal-regexp': 'warn',
    'security/detect-unsafe-regex': 'error',
    'security/detect-buffer-noassert': 'error',
    'security/detect-child-process': 'error',
    'security/detect-disable-mustache-escape': 'error',
    'security/detect-eval-with-expression': 'error',
    'security/detect-no-csrf-before-method-override': 'error',
    'security/detect-non-literal-fs-filename': 'warn',
    'security/detect-non-literal-require': 'warn',
    'security/detect-possible-timing-attacks': 'warn',
    'security/detect-pseudoRandomBytes': 'error',

    // Prettier integration
    'prettier/prettier': 'error',

    // React Refresh rules
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
  },
  overrides: [
    {
      files: ['**/*.test.ts', '**/*.test.tsx', '**/*.spec.ts', '**/*.spec.tsx'],
      env: {
        jest: true,
      },
      rules: {
        '@typescript-eslint/no-explicit-any': 'off',
        'sonarjs/no-identical-functions': 'off',
        'sonarjs/no-duplicate-string': 'off',
      },
    },
    {
      files: ['**/*.config.js', '**/*.config.mjs'],
      env: {
        node: true,
      },
      rules: {
        '@typescript-eslint/no-var-requires': 'off',
      },
    },
  ],
  ignorePatterns: [
    'node_modules/',
    'dist/',
    'build/',
    '.next/',
    'coverage/',
    '*.config.js',
    '*.config.mjs',
  ],
};
